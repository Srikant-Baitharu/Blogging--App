--CREATED INSTANCE FOR SETUP EKS USING TERRAFORM--

sudo apt update

install aws cli for ubuntu

terraform install
sudo snap install terraform --classic

aws configure
give accessid and passkey

mkdir terraform

vi main.tf 
vi output.tf 
vi variable.tf 

terraform init 
terraform plan
terraform apply --auto-approve

install kubectl
sudo snap install kubectl --classic

aws eks --region ap-south-1 update-kubeconfig --name <cluster-name>  /// it will connect with cluster

kubectl get nodes

cd ..

vi svc.yml  -->
------------------------------------------------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: webapps
-------------------------------------------------------------------------------
kubectl create ns webapps

kubectl apply -f svc.yml

sudo vi role.yml -->
-------------------------------------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: app-role
  namespace: webapps
rules:
  - apiGroups:
        - ""
        - apps
        - autoscaling
        - batch
        - extensions
        - policy
        - rbac.authorization.k8s.io
    resources:
      - pods
      - secrets
      - componentstatuses
      - configmaps
      - daemonsets
      - deployments
      - events
      - endpoints
      - horizontalpodautoscalers
      - ingress
      - jobs
      - limitranges
      - namespaces
      - nodes
      - pods
      - persistentvolumes
      - persistentvolumeclaims
      - resourcequotas
      - replicasets
      - replicationcontrollers
      - serviceaccounts
      - services
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
------------------------------------------------------------------------------------------
kubectl apply -f role.yml

//Now bind the role to service account
sudo vi bind.yml  -->
------------------------------------------------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app-rolebinding
  namespace: webapps 
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: app-role 
subjects:
- namespace: webapps 
  kind: ServiceAccount
  name: jenkins 
-------------------------------------------------------------------------------------------
kubectl apply -f bind.yml

--generate token--
sudo vi jen-secret.yml  -->
-------------------------------------------------------------------------------------------
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: mysecretname
  annotations:
    kubernetes.io/service-account.name: myserviceaccount
-------------------------------------------------------------------------------------------

kubectl apply -f jen-secret.yml -n webapps

kubectl create secret docker-registry

kubectl describe secret mysecretname -n webapps


//Now add credentials in jenkins
Modify pipeline